// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: chunks.proto

package grpc_chunks

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetChunkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handle string `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	Start  int64  `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	End    int64  `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *GetChunkRequest) Reset() {
	*x = GetChunkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chunks_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChunkRequest) ProtoMessage() {}

func (x *GetChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chunks_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChunkRequest.ProtoReflect.Descriptor instead.
func (*GetChunkRequest) Descriptor() ([]byte, []int) {
	return file_chunks_proto_rawDescGZIP(), []int{0}
}

func (x *GetChunkRequest) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *GetChunkRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GetChunkRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

type GetChunkReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	Err   string `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *GetChunkReponse) Reset() {
	*x = GetChunkReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chunks_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChunkReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChunkReponse) ProtoMessage() {}

func (x *GetChunkReponse) ProtoReflect() protoreflect.Message {
	mi := &file_chunks_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChunkReponse.ProtoReflect.Descriptor instead.
func (*GetChunkReponse) Descriptor() ([]byte, []int) {
	return file_chunks_proto_rawDescGZIP(), []int{1}
}

func (x *GetChunkReponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *GetChunkReponse) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type StoreChunkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body []byte `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *StoreChunkRequest) Reset() {
	*x = StoreChunkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chunks_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreChunkRequest) ProtoMessage() {}

func (x *StoreChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chunks_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreChunkRequest.ProtoReflect.Descriptor instead.
func (*StoreChunkRequest) Descriptor() ([]byte, []int) {
	return file_chunks_proto_rawDescGZIP(), []int{2}
}

func (x *StoreChunkRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type StoreChunkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err string `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *StoreChunkResponse) Reset() {
	*x = StoreChunkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chunks_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreChunkResponse) ProtoMessage() {}

func (x *StoreChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chunks_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreChunkResponse.ProtoReflect.Descriptor instead.
func (*StoreChunkResponse) Descriptor() ([]byte, []int) {
	return file_chunks_proto_rawDescGZIP(), []int{3}
}

func (x *StoreChunkResponse) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

var File_chunks_proto protoreflect.FileDescriptor

var file_chunks_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x22, 0x51, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x39,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x27, 0x0a, 0x11, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x22, 0x26, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x32, 0xa7, 0x01, 0x0a, 0x0c, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x30, 0x01, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chunks_proto_rawDescOnce sync.Once
	file_chunks_proto_rawDescData = file_chunks_proto_rawDesc
)

func file_chunks_proto_rawDescGZIP() []byte {
	file_chunks_proto_rawDescOnce.Do(func() {
		file_chunks_proto_rawDescData = protoimpl.X.CompressGZIP(file_chunks_proto_rawDescData)
	})
	return file_chunks_proto_rawDescData
}

var file_chunks_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_chunks_proto_goTypes = []interface{}{
	(*GetChunkRequest)(nil),    // 0: grpc_chunks.GetChunkRequest
	(*GetChunkReponse)(nil),    // 1: grpc_chunks.GetChunkReponse
	(*StoreChunkRequest)(nil),  // 2: grpc_chunks.StoreChunkRequest
	(*StoreChunkResponse)(nil), // 3: grpc_chunks.StoreChunkResponse
}
var file_chunks_proto_depIdxs = []int32{
	2, // 0: grpc_chunks.ChunkService.StoreChunk:input_type -> grpc_chunks.StoreChunkRequest
	0, // 1: grpc_chunks.ChunkService.GetChunk:input_type -> grpc_chunks.GetChunkRequest
	3, // 2: grpc_chunks.ChunkService.StoreChunk:output_type -> grpc_chunks.StoreChunkResponse
	1, // 3: grpc_chunks.ChunkService.GetChunk:output_type -> grpc_chunks.GetChunkReponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_chunks_proto_init() }
func file_chunks_proto_init() {
	if File_chunks_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chunks_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChunkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chunks_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChunkReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chunks_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreChunkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chunks_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreChunkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chunks_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chunks_proto_goTypes,
		DependencyIndexes: file_chunks_proto_depIdxs,
		MessageInfos:      file_chunks_proto_msgTypes,
	}.Build()
	File_chunks_proto = out.File
	file_chunks_proto_rawDesc = nil
	file_chunks_proto_goTypes = nil
	file_chunks_proto_depIdxs = nil
}
